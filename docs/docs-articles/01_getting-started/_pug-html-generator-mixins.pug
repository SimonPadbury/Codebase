extends ../../docs-template-partials/_docs-article

block prepend article
  - var articleId = "getting-started-pug-html-generator-mixins"
  - var articleTitle = "Pug-HTML Generator Mixins"

block section

  p.lead Codebase has some handy Pug-HTML generator mixins for rapid prototyping. 
  
  p These have been used in generating some of the docs examples and #[a(href="examples.html") example templates].

  p You can use these generators and also develop your own if you need them in your prototyping. Examples of others in the Codebase project can be found in the #[code .popover--fix] example (a popover with a lot of demo tabular content), and in the example demo blog excerpts loop.
    
  h4#gen-paragraphs "Lorem ipsum" Paragraph Generator

  p When this paragraph mixin is included, it will generate #[b one to five paragraphs] in your HTML depending on how many you specify. You can also add some classes to the first paragraph (e.g. if you require it to have a dropcap, or enlarged "lead" text, or some #[a(href="decoration-utilities.html") decoration] classes).

  p See #[a(href="codebase/pug/generators/_paragraphs.pug") codebase/pug/generators/_paragraphs.pug].

  pre
    code.
      //- PARAGRAPH GENERATOR

      mixin paragraph(number, p1Class)
        case number
          when 1
            p(class=p1Class) Lorem ipsum dolor sit amet...
          
          when 2
            p(class=p1Class) Lorem ipsum dolor sit amet...
            p Cras bibendum libero non vulputate congue...
          
          when 3
            p(class=p1Class) Lorem ipsum dolor sit amet...
            p Cras bibendum libero non vulputate congue...
            p Cras vel massa nec magna tincidunt maximus a in erat...
          
          when 4
            p(class=p1Class) Lorem ipsum dolor sit amet...
            p Cras bibendum libero non vulputate congue...
            p Cras vel massa nec magna tincidunt maximus a in erat...
            p Aliquam erat volutpat. Maecenas pulvinar tincidunt augue...
          
          when 5
            p(class=p1Class) Lorem ipsum dolor sit amet...
            p Cras bibendum libero non vulputate congue...
            p Cras vel massa nec magna tincidunt maximus a in erat...
            p Aliquam erat volutpat. Maecenas pulvinar tincidunt augue...
            p Fusce pretium eros sit amet ante porta, a ullamcorper elit vulputate...

          default
            p Lorem ipsum dolor sit amet, consectetur adipiscing elit...

  p (In the actual mixin these paragraphs are written in full.)
    
  p Usage examples:

  pre
    code.
      //- To get one paragraph (default):
      
      +paragraph
      
      //- To get a specific number of paragraphs (up to 4)

      +paragraph(2)
      
      //- To add some classes to the *first* paragraph
      
      +paragraph(1, "dropcap gray")
      
      +paragraph(3, "lead blue-darken-1")


  h4#gen-menus-and-menubars Menu and Menubar Generators

  p Mixins for rapid generation of demo menus and menubars have been provided. See #[a(href="codebase/pug/generators/_menus.pug") codebase/pug/generators/_menus.pug].
    
  pre
    code.
      //- Menu generator

      mixin menu(menuLink, total, menuClass)
        - var n = 0;
        ul(class=["menu", menuClass])
          while n &lt; total
            li
              a(href="#/")= menuLink
                = " "
                = (n++ + 1)

      //- Menubar generator

      mixin menubar(menuLink, total, menuClass)
        - var n = 0;
        ul(class=["menubar", menuClass])
          while n &lt; total
            li
              a(href="#/")= menuLink
                = " "
                = (n++ + 1)

  p Usage: in the parameters specify:
    
  ol
    li The text of the menu link
    li The number of menu items
    li Any classes you require to be added (optional)
      
  p Examples:
    
  pre
    code.
      //- a 5-item menu:
      
      +menu("Menu link", 5)
      
      //- a 4-item menubar, centered
      
      +menubar("Test", 4, "menubar--center")

  h3#gen-tables Table Generator

  p This mixin builds a demo table for you.
    
  p See #[a(href="codebase/pug/generators/_tables.pug") codebase/pug/generators/_tables.pug].

  pre
    code.
      mixin table(totalColumns, totalRows, tableClass)
        table(class=["table", tableClass])
          thead
            tr
              - for (var cols = 0; cols &lt; totalColumns; cols++)
                th= "Table Header"
                  = " "
                  = (cols + 1)
          tbody
            - for (var rows = 0; rows &lt; totalRows; rows++)
              tr
                - for (var cols = 0; cols &lt; totalColumns; cols++)
                  td= "Table content"
                    = " "
                    = (cols + 1)
                    = "."
                    = (rows + 1)

  p Usage: in the parameters specify:
    
  ol
    li The number of rows
    li The number of columns
    li Any classes you require to be added (optional)
      
  p Examples:

  pre
    code.
      +table(3, 4)
      
      +table(6, 5, "table--cols table--striped")

  h3#gen-images Image Placeholder Generators (SVG)

  p Codebase has its own rapid SVG placeholder generators. These simply have a width and height, a background color and a "X" composed of diagonal lines joining opposite corners. A light version and a dark version have been provided &ndash; chooses whatever is appropriate for your prototype design.

  p Alternatively you may use e.g. #[a(href="http://holderjs.com") http://holderjs.com] or #[a(href="https://placeholder.com") https://placeholder.com].

  p Examples:

  pre
    code.
      +image-placeholder-light(100, 100)

      +image-placeholder-dark(100, 100, 'b--circle')
      
  +image-placeholder-light(100, 100)
  
  +image-placeholder-dark(100, 100, 'b--circle')

  pre
    code.
      mixin image-placeholder-light(imageWidth, imageHeight, imageClass)

        - var imageWidth
        - var imageHeight  
        
        svg(xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMinYMin meet" width=imageWidth height=imageHeight class=imageClass style="max-width: 100%; height: auto; background: #eee")
          line(x2="100%" y2="100%" style="stroke: #ccc; stroke-width: 2px; stroke-linecap: round;")
          line(y1="100%" x2="100%" style="stroke: #ccc; stroke-width: 2px; stroke-linecap: round;")

      mixin image-placeholder-dark(imageWidth, imageHeight, imageClass)

        - var imageWidth
        - var imageHeight  
        
        svg(xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMinYMin meet" width=imageWidth height=imageHeight class=imageClass style="max-width: 100%; height: auto; background: #555")
          line(x2="100%" y2="100%" style="stroke: #777; stroke-width: 2px; stroke-linecap: round;")
          line(y1="100%" x2="100%" style="stroke: #777; stroke-width: 2px; stroke-linecap: round;")

  p Usage: in the parameters specify:
    
  ol
    li The width
    li The height
    li Any classes you require to be added (optional)

  h4#gen-background-images.mt--line Background Image Placeholders (SVG)

  p Codebase also provides some background image placeholder mixins. These are DIV wrappers, to which is applied a light or dark background with cross-hatching.

  p Examples:

  pre
    code.
      +background-image-placeholder-light
        p Hello

      +background-image-placeholder-dark
        +paragraph(1, "p--16 white")

  +background-image-placeholder-light
    p Hello

  +background-image-placeholder-dark
    +paragraph(1, "p--16 white")

  pre
    code.
      mixin background-image-placeholder-light
        style.
          .background-image-placeholder-light {
            background: #eee url("data:image/svg+xml;utf8,&lt;svg xmlns='http://www.w3.org/2000/svg' width='30' height='20' viewBox='0 0 30 20' fill='none' stroke='#ccc'&gt;&lt;line x1='30' y1='0' x2='0' y2='20'&gt;&lt;/line&gt;&lt;line x1='0' y1='0' x2='30' y2='20'&gt;&lt;/line&gt;&lt;/svg&gt;");
          }
        .background-image-placeholder-light
          if block
            block
          else
            p [Your content here...]

      mixin background-image-placeholder-dark
        style.
          .background-image-placeholder-dark {
            background: #555 url("data:image/svg+xml;utf8,&lt;svg xmlns='http://www.w3.org/2000/svg' width='30' height='20' viewBox='0 0 30 20' fill='none' stroke='#777'&gt;&lt;line x1='30' y1='0' x2='0' y2='20'&gt;&lt;/line&gt;&lt;line x1='0' y1='0' x2='30' y2='20'&gt;&lt;/line&gt;&lt;/svg&gt;");
          }
        .background-image-placeholder-dark
          if block
            block
          else
            p [Your content here...]

  p Usage: simply choose whether to use the light or dark background image placeholder.