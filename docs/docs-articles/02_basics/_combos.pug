extends ../../docs-template-partials/_docs-article

block prepend article
  - var articleId = "basics-combos"
  - var articleTitle = "Combos"

block section

  p #[code .combo--*] classes enable multiple buttons and/or form elements to be used in a cluster. Combo classes remove some of the rounded corners (if present).

  h3.Inline Combos

  p #[code .combo--left], #[code .combo--center] and #[code .combo--right] classes are set as inline blocks. Floats are used to close up the spaces.

  p In order to display the form input fields as inline items, the class #[code .form__input--inline] has also been used (to override the Codebase default 100% width that is applied to form input fields.)
    
  form(action="")
    input(placeholder="Search" type="search").form__input--sm.form__input--inline.combo--left
    button.btn.btn--sm.combo--right #[i.fas.fa-search] Go

  br
  
  form(action="")
    input(placeholder="Search" type="search").form__input--inline.form__input--pill.combo--left
    button.btn.btn--pill.combo--right #[i.fas.fa-search] Go

  br
    
  form(action="")
    input(placeholder="Search" type="search").form__input--lg.form__input--inline.combo--left
    button.btn.btn--lg.combo--right #[i.fas.fa-search] Go

  br
    
  p.mt--line
    button.btn.combo--left Alpxa
    button.btn.combo--center Beta
    button.btn.combo--center Charlie
    button.btn.combo--right Delta

  br
    
  form(action="")
    input(name="" placeholder="Name" type="text").form__input--inline.combo--left
    input(name="" placeholder="Email" type="email").form__input--inline.combo--center
    button.btn.combo--right Subscribe
  
  br
    
  .dropdown.decorate
    button.btn.btn--pill.combo--left Dropdown combo
    button.btn.btn--icon.btn--pill.combo--right.dropdown__ctrl
    span.dropdown__content Example dropdown content
    
  br
    
  h3 Stacked Combos

  p #[code .combo--top], #[code .combo--middle] and #[code .combo--bottom] classes remain naturally as stacked items.
  
  p Form elements ordinarily (even without combo classes) expend to the full width of their container, whereas buttons require #[code .btn--block] to make them expand to full width. Then you can constrain the width of your container for your combo cluster. 
    
  .flexbox.flexbox--gap.flexbox--nested
    .flex-item--span-6
      form(action="")
        input(name="" placeholder="Name" type="text").combo--top
        input(name="" placeholder="Email" type="email").combo--middle
        button.btn.btn--block.combo--bottom Subscribe
        
    .flex-item--span-6
      
      .showhide
        .showhide__ctrl.btn.btn--block.combo--top First showhide parent
        .showhide__content
          .p--block.bg--gray-lighten-3 First child

      .showhide.combo--middle
        .showhide__ctrl.btn.btn--block.combo--middle Second showhide parent
        .showhide__content
          .p--block.bg--gray-lighten-3 Second child

      .showhide
        .showhide__ctrl.btn.btn--block.combo--bottom Third showhide parent
        .showhide__content
          .p--block.bg--gray-lighten-3 Third child
