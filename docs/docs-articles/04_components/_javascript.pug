extends ../../docs-template-partials/_docs-article

block prepend article
  - var articleId = "components-javascript"
  - var articleTitle = "Components that use JavaScript"

block section
  p.lead Some components in Codebase use tiny, simple JavaScript scripts for their operation. These have all been bundled into #[code codebase.js]. 
  
  p Since Codebase v2.0, #[code codebase.js] has been totally refactored so that it does not require jQuery (or any other library).

  p Most Codebase script functions simply add and remove CSS classes, in response to click/tap events or viewport resizes (e.g. rotating a pxone from portrait to landscape orientation).

  h3 Activator
  
  p The #[a(href="#components-activator") activator] script responds to clicks/taps on a "controller" element (e.g. button) and it applies #[code .is-active] classes to the activated controller and to its component wrapper and target "content" element. Click/tap this controller element again and it will remove the #[code .is-active] classes &ndash; and deactivation can also be caused by "clicking outside" the active component or by clicking a "close" element (e.g. a dismiss button). 
  
  p Activator is used by showhide, dropdowns, menubars (for the collapsed state on small viewports), off-canvas panels, and popovers. Plus you can create your own componends that need to use the activator functionality. (Only one activator component can be active at any one time &ndash; activating one will deactivate all others.)

  h3 Toggler
  
  p The #[a(href="#components-toggler") toggler] script is for use in simpler situations than activator. Toggler responds responds to clicks/taps on a controller element (e.g. button) and it applies #[i a class of your choice] to its target element. Click/tap the toggler controller again, and your class will be removed from the target. 
  
  p Toggler is not actually used for any Codebase component (but there are some examples in the docs). So, it has no styling in #[code codebase.css]. Toggler is there for you to use for your own situations that require toggling (class add/remove) situations. Togglers are independent of each other, and multiple togglers can be toggled at any one time.

  h3 Tabs
  
  p The #[a(href="#components-tabs") tabs] script is used where you have several controller elements and a corresponding number of content elements in a set. Clicking one tab controller will add class #[code .is-front] to the controller and its target content &ndash; and remove #[code .is-front] from the other controllers and target contents in the set.

  h3 Responsive Tables

  p Trying to display a wide tables on a narrow screens can be problematic. So a Codebase #[a(href="#components-tables") table] script looks for the Codebase #[code .table] class and then double wraps it in two DIVs with related classes. The outer DIV wrapper constrains the overall width to the width of the available space while the inner DIV wrapper enables the table to overflow horizontally but invisibly &ndash; and it enables the visitor to horizontally-scroll the table so that they can see all the data.

  h3 Pagination

  p The Codebase #[a(href="#components-pagination") pagination] script simply prevents click/taps from following the hyperlink on the "current" page link in a pagination list &ndash; so that the current page is not unnecessarily reloaded.

  h3 Load Partial

  p The Codebase #[a(href="#components-load-partial") load partial] script fetches any (text, HTML, or XML) file of your choice from #[i anywhere in your website's root folder] on a server and loads it into an element on your webpage. This can be useful for building sidebar navigation, or for prototyping before transforming a design into a CMS template.